generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int                 @id @default(autoincrement())
  email             String?             @unique
  name              String?
  number            String              @unique
  password          String
  Balance           Balance[]
  OnRampTransaction OnRampTransaction[]
  sentTransfers     P2PTransactions[]   @relation(name: "fromUserRelation")
  receivedTransfers P2PTransactions[]   @relation(name: "toUserRelation")
}

model Merchant {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  name        String?
  provider_id String
  auth_type   AuthType
}

model Balance {
  id     Int  @id @default(autoincrement())
  userId Int  @unique
  amount Int
  locked Int
  user   User @relation(fields: [userId], references: [id])
}

model OnRampTransaction {
  id        Int          @id @default(autoincrement())
  status    OnRampStatus
  token     String       @unique
  provider  String
  amount    Int
  startTime DateTime
  userId    Int
  user      User         @relation(fields: [userId], references: [id])
}

model P2PTransactions {
  id         Int      @id @default(autoincrement())
  senderId   Int
  receiverId Int
  amount     Int
  startTime  DateTime
  sender     User     @relation(name: "fromUserRelation", fields: [senderId], references: [id])
  receiver   User     @relation(name: "toUserRelation", fields: [receiverId], references: [id])
}

enum AuthType {
  Google
  Github
}

enum OnRampStatus {
  Pending
  Success
  Failed
}
